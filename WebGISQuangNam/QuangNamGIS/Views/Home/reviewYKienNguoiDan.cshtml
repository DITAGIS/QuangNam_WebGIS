@model WebGISQuangNam.Models.dataHelper.YKienQuyHoach
@{
    ViewBag.Title = "Lấy ý kiến người dân";
    Layout = "~/Views/Shared/_LayoutNormal.cshtml";
}

<style>
    .form-control {
        border-radius: 0 !important;
        border: none;
        border-bottom: 1px solid #7b7777;
    }
</style>

@using (Html.BeginForm())
            {
    @Html.AntiForgeryToken()
<div class="container">
    <div class="formGopY">
        <div class="row">
            <div class="col-md-12">
                <h4>
                    <img src="~/Content/logo.png" />
                    HỆ THỐNG THÔNG TIN ĐỊA LÝ QUY HOẠCH XÂY DỰNG TỈNH QUẢNG NAM
                </h4>
                <hr />
                <h5 style="text-align:center; border:none; font-size:22px;">PHIẾU ĐÓNG GÓP Ý KIẾN QUY HOẠCH</h5>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <div class="form-horizontal">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <h5>A. THÔNG TIN VỀ ĐỒ ÁN</h5>
                    <div class="form-group">

                        @{
                            WebGISQuangNam.Models.dataHelper.THONGTINDOAN doan = (WebGISQuangNam.Models.dataHelper.THONGTINDOAN)ViewBag.DoAn;
                        }

                        @Html.LabelFor(model => model.MaDoAn, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-7">
                            @Html.DisplayFor(model => model.MaDoAn, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MaDoAn, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.TenDoAn)
                            @Html.HiddenFor(model => model.BangDuLieu)
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-3">Tên đồ án:</label> <div class="col-md-9"> @doan.TenDoAn</div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-3">Địa điểm:</label><div class="col-md-9">@doan.DiaDiem</div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-3">Chủ đầu tư:</label><div class="col-md-9">@doan.ChuDauTu</div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-3">Đơn vị tư vấn:</label>       <div class="col-md-9"></div>
                    </div>


                    <h5>B. THÔNG TIN VỀ ĐƠN VỊ, CÁ NHÂN ĐÓNG GÓP Ý KIẾN</h5>
                    <div class="form-group">
                        @Html.LabelFor(model => model.TenToChu, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.TenToChu, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TenToChu, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DiaChi, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.DiaChi, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DiaChi, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">

                        <div class="row">

                            <div class="col-md-6">
                                @Html.LabelFor(model => model.DienThoai, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.DienThoai, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.DienThoai, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-3" })
                                <div class="col-md-9">
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>

                    </div>

                    <h5>C. Nội dung góp ý</h5>

                    <div class="form-group">

                        <div class="col-md-12">
                            @Html.EditorFor(model => model.NoiDungGopY, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NoiDungGopY, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

            </div>


        </div>

        <div class="row">
            <div class="col-lg-12">
                <h6>Chúng tôi xin trân trọng cảm ơn những ý kiến và sự hợp tác của quý vị!</h6>
            </div>
        </div>
    </div>
    
     <div class="row">
        <div class="col-md-12">
            <div class="form-group">
                <div class="col-md-12" style="text-align:center;">
                    <button type="submit" value="Gửi góp ý" class="btn btn-danger">Gửi góp ý</button>
                    <button type="button" id="saveFormData" value="Tải về" class="btn btn-primary">Tải về</button>
                </div>
            </div>
        </div>
    </div>
</div>
}

@section Scripts {


    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.5/jspdf.min.js"></script>

    <script>

        (function () {
            var
             form = $('.formGopY'),
             cache_width = form.width(),
             a4 = [595.28, 841.89]; // for a4 size paper width and height

            $('#saveFormData').on('click', function () {
                $(window).scrollTop(0);
                createPDF();
            });
            //create pdf
            function createPDF() {
                getCanvas().then(function (canvas) {
                    var
                     img = canvas.toDataURL("image/png"),
                     doc = new jsPDF({
                         unit: 'px',
                         format: 'a4'
                     });
                    doc.addImage(img, 'JPEG', 20, 20);
                    doc.save('formGopY.pdf');
                    form.width(cache_width);
                });
            }

            // create canvas object
            function getCanvas() {
                form.width((a4[0] * 1.33333) - 80).css('max-width', 'none');
                return html2canvas(form, {
                    imageTimeout: 2000,
                    removeContainer: true
                });
            }

        }());
    </script>
    <script>

        /*
     * jQuery helper plugin for examples and tests
     */
        (function ($) {
            $.fn.html2canvas = function (options) {
                var date = new Date(),
                $message = null,
                timeoutTimer = false,
                timer = date.getTime();
                html2canvas.logging = options && options.logging;
                html2canvas.Preload(this[0], $.extend({
                    complete: function (images) {
                        var queue = html2canvas.Parse(this[0], images, options),
                        $canvas = $(html2canvas.Renderer(queue, options)),
                        finishTime = new Date();

                        $canvas.css({ position: 'absolute', left: 0, top: 0 }).appendTo(document.body);
                        $canvas.siblings().toggle();

                        $(window).click(function () {
                            if (!$canvas.is(':visible')) {
                                $canvas.toggle().siblings().toggle();
                                throwMessage("Canvas Render visible");
                            } else {
                                $canvas.siblings().toggle();
                                $canvas.toggle();
                                throwMessage("Canvas Render hidden");
                            }
                        });
                        throwMessage('Screenshot created in ' + ((finishTime.getTime() - timer) / 1000) + " seconds<br />", 4000);
                    }
                }, options));

                function throwMessage(msg, duration) {
                    window.clearTimeout(timeoutTimer);
                    timeoutTimer = window.setTimeout(function () {
                        $message.fadeOut(function () {
                            $message.remove();
                        });
                    }, duration || 2000);
                    if ($message)
                        $message.remove();
                    $message = $('<div ></div>').html(msg).css({
                        margin: 0,
                        padding: 10,
                        background: "#000",
                        opacity: 0.7,
                        position: "fixed",
                        top: 10,
                        right: 10,
                        fontFamily: 'Tahoma',
                        color: '#fff',
                        fontSize: 12,
                        borderRadius: 12,
                        width: 'auto',
                        height: 'auto',
                        textAlign: 'center',
                        textDecoration: 'none'
                    }).hide().fadeIn().appendTo('body');
                }
            };
        })(jQuery);

    </script>


}

